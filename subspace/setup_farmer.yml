---
- name: Setup Subspace Farmer Service
  hosts: farmers
  become: yes
  vars:
    reward_address: "<reward address>" #update with your address
    metrics_endpoints: "0.0.0.0:9081"
    node_rpc_url: "ws://192.168.3.41:9944" #update with your full node

  tasks:
    - name: Download Subspace Farmer binary
      get_url:
        url: "https://github.com/subspace/subspace/releases/download/gemini-3h-2024-jun-18/subspace-farmer-ubuntu-x86_64-skylake-gemini-3h-2024-jun-18"
        dest: "/usr/local/bin/subspace-farmer"
        mode: '0755'

    - name: Discover NVMe mount points and use reported sizes
      ansible.builtin.shell: |
        lsblk --noheadings --raw --output NAME,MOUNTPOINT,SIZE | grep 'nvme' | grep -v '^\s*$' | awk '$2 != "" {print "path="$2",size="$3}'
      register: nvme_mount_points
      changed_when: false

    - name: Filter and format NVMe mount points for ExecStart
      set_fact:
        exec_start_paths: "{{ nvme_mount_points.stdout_lines | select('search', '^path=/mnt/') | join(' ') }}"

    - name: Create Subspace Farmer service file
      template:
        src: subspace-farmer.service.j2
        dest: /etc/systemd/system/subspace-farmer.service
      vars:
        exec_start_paths: "{{ exec_start_paths }}"

    - name: Reload systemd to read new service file
      systemd:
        daemon_reload: yes

    - name: Stop Subspace Farmer service before update
      systemd:
        name: subspace-farmer
        state: stopped

    - name: Enable and restart Subspace Farmer service
      systemd:
        name: subspace-farmer
        enabled: yes
        state: restarted

    - name: Wait for service to stabilize
      pause:
        seconds: 15

    - name: Check status of Subspace Farmer service
      command: systemctl status subspace-farmer
      register: result

    - name: Display status of Subspace Farmer service
      debug:
        msg: "{{ result.stdout }}"
