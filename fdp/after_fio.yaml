---
- name: Collect NVMe logs and parse fio results
  hosts: all
  become: yes
  tasks:

    - name: Get NVMe smart-log after fio test on localhost
      local_action: shell nvme smart-log /dev/nvme1n1 > /tmp/smart_after.log

    - name: Get NVMe ocp smart-add-log after fio test on localhost
      local_action: shell nvme ocp smart-add-log /dev/nvme1n1 > /tmp/ocp_after.log

    - name: Fetch fio output log from remote hosts
      fetch:
        src: /tmp/fio_output.log
        dest: /tmp/fio_output_{{ inventory_hostname }}.log
        flat: yes

    - name: Parse fio output log to extract read bandwidth and IOPS
      local_action:
        module: shell
        cmd: |
          cat /tmp/fio_output_{{ inventory_hostname }}.log | \
          jq -r '.jobs[] | select(.jobname=="read") | "Read BW: \(.read.bw * 1024 / 1000 / 1000) MB/s IOPS: \(.read.iops)"' > /tmp/fio_read_results_{{ inventory_hostname }}.log
      register: read_results

    - name: Parse fio output log to extract write bandwidth and IOPS
      local_action:
        module: shell
        cmd: |
          cat /tmp/fio_output_{{ inventory_hostname }}.log | \
          jq -r '.jobs[] | select(.jobname=="write") | "Write BW: \(.write.bw * 1024 / 1000 / 1000) MB/s IOPS: \(.write.iops)"' > /tmp/fio_write_results_{{ inventory_hostname }}.log
      register: write_results

    - name: Display read and write bandwidth and IOPS
      local_action:
        module: shell
        cmd: |
          echo "Read Bandwidth and IOPS for {{ inventory_hostname }}:" && cat /tmp/fio_read_results_{{ inventory_hostname }}.log && \
          echo "Write Bandwidth and IOPS for {{ inventory_hostname }}:" && cat /tmp/fio_write_results_{{ inventory_hostname }}.log
      register: final_results

    - name: Show final results
      debug:
        msg: "{{ final_results.stdout }}"